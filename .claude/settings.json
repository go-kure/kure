{
  "permissions": {
    "allow": [
      "Bash(go:*)",
      "Bash(/usr/bin/go:*)",
      "Bash(go*/bin/go:*)",
      "Bash(GOROOT=*:*)",
      "Bash(export:*)",
      "Bash(unset:*)",
      "Bash(git:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(cp:*)",
      "Bash(rm:*)",
      "Bash(rmdir:*)",
      "Bash(touch:*)",
      "Bash(echo:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(tree:*)",
      "Bash(helm:*)",
      "Bash(./kure:*)",
      "Bash(./kurel:*)",
      "Bash(mise:*)",
      "Bash(env:*)",
      "Bash(cat:*)",
      "Bash($GOROOT:*)",
      "Bash(GOROOT=/usr/lib/go:*)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/*:*)",
      "Bash(/home/serge/.local/share/mise/installs/go/*/bin/go:*)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go list ./...)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:pkg.go.dev)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./pkg/kubernetes -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./pkg/stack/argocd -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./pkg/stack/generators/appworkload -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./pkg/stack/generators/fluxhelm -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./cmd/demo -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./cmd/demo)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./cmd/kure -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./cmd/kurel -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./internal/validation)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./pkg/kubernetes/fluxcd -v)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go doc github.com/controlplaneio-fluxcd/flux-operator/api/v1 ResourceSetSpec)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./pkg/stack/v1alpha1 -bench=. -run=^$)",
      "WebFetch(domain:productionresultssa11.blob.core.windows.net)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./cmd/demo -v -run TestDemoOutput_Formatting)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./cmd/demo -v -run TestRunInternals)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./... -short)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go run . --internals)",
      "Bash(/home/serge/.local/share/mise/installs/go/1.24.6/bin/go run . --internals)",
      "Bash(/home/serge/.local/share/mise/installs/go/1.24.6/bin/go run ./cmd/demo --internals)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./cmd/demo -v -run \"TestDemoGVKGenerators|TestDemoOutput_Formatting|TestRunInternals\")",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go run -c 'package main; import (\"\"fmt\"\"; \"\"os\"\"); func main() { DemoGVKGenerators() }')",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go run test_gvk.go)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go test ./... -timeout 30s)",
      "WebFetch(domain:productionresultssa19.blob.core.windows.net)",
      "Bash(make:*)",
      "Bash(GOROOT=/home/serge/.local/share/mise/installs/go/1.24.6 /home/serge/.local/share/mise/installs/go/1.24.6/bin/go run ./cmd/demo --internals)"
    ],
    "deny": []
  },
  "project": "go-kure/kure",
  "description": "Kure - A Go library for programmatically building Kubernetes resources for GitOps tools",
  "language": "go",
  "goVersion": "1.24.6",
  "codingStandards": {
    "errorHandling": "always use kure/errors package; never use fmt.Errorf directly",
    "logging": "always use pkg/logger package",
    "testing": "comprehensive unit and integration tests required",
    "documentation": "GoDoc comments required for all public functions"
  },
  "preferences": {
    "saveSettingsAutomatic": true,
    "saveSettingsPath": ".claude/settings.json",
    "useLocalSettings": false,
    "alwaysWriteToMainSettings": true
  },
  "currentWork": {
    "module": "testing",
    "phase": "Testing Coverage Implementation",
    "status": "completed",
    "completedPhases": [
      "Phase 1: Types and Interfaces",
      "Phase 2: Variable Resolution",
      "Phase 3: Patch Processing",
      "Phase 4: Schema Generation and Validation",
      "Phase 5: Output Builder and Extensions",
      "Phase 6: CLI Commands",
      "Phase 7: Integration Tests",
      "Phase 8: Testing Coverage Gaps - Added comprehensive tests for pkg/cli, pkg/cmd/kure, pkg/cmd/kurel, pkg/logger"
    ],
    "nextPhases": [
      "Complete remaining package tests (pkg/kubernetes, pkg/stack/argocd, generators)",
      "Documentation and Examples",
      "Performance Optimization"
    ]
  },
  "todoListEnabled": true,
  "testCoverage": {
    "target": "80%",
    "current": "82.1%",
    "newlyTested": [
      "pkg/cli",
      "pkg/cmd/kure",
      "pkg/cmd/kurel",
      "pkg/logger"
    ],
    "remainingPackages": [
      "internal/validation",
      "pkg/kubernetes",
      "pkg/stack/argocd",
      "pkg/stack/generators/*"
    ]
  },
  "memoryNotes": [
    "Always save settings to .claude/settings.json (never .local variant)",
    "Always use kure/errors package for error handling",
    "Always use pkg/logger for logging"
  ],
  "performanceTargets": {
    "fullBuild": "<1s",
    "validation": "<100ms",
    "schemaGeneration": "<500ms"
  }
}