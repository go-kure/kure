{
  "project": "go-kure/kure",
  "description": "Kure - A Go library for programmatically building Kubernetes resources for GitOps tools",
  "language": "go",
  "goVersion": "1.24.6",
  "codingStandards": {
    "errorHandling": "always use kure/errors package; never use fmt.Errorf directly",
    "logging": "always use pkg/logger package",
    "testing": "comprehensive unit and integration tests required",
    "documentation": "GoDoc comments required for all public functions"
  },
  "preferences": {
    "saveSettingsAutomatic": true,
    "saveSettingsPath": ".claude/settings.json",
    "useLocalSettings": false
  },
  "currentWork": {
    "module": "launcher",
    "phase": "7 - Integration Tests",
    "status": "completed",
    "completedPhases": [
      "Phase 1: Types and Interfaces",
      "Phase 2: Variable Resolution",
      "Phase 3: Patch Processing",
      "Phase 4: Schema Generation and Validation",
      "Phase 5: Output Builder and Extensions",
      "Phase 6: CLI Commands",
      "Phase 7: Integration Tests"
    ],
    "nextPhases": [
      "Documentation and Examples",
      "Performance Optimization"
    ]
  },
  "todoListEnabled": true,
  "testCoverage": {
    "target": "80%",
    "current": "77.4%"
  },
  "memoryNotes": [
    "Always save settings to .claude/settings.json (never .local variant)",
    "Always use kure/errors package for error handling",
    "Always use pkg/logger for logging"
  ],
  "performanceTargets": {
    "fullBuild": "<1s",
    "validation": "<100ms",
    "schemaGeneration": "<500ms"
  },
  "permissions": {
    "allow": [
      "Bash(/usr/bin/go test -bench=. -benchmem ./pkg/launcher)",
      "Bash(export:*)",
      "Bash(/usr/bin/go test -c ./pkg/launcher)",
      "Bash(unset GOROOT)",
      "Bash(find:*)",
      "Bash(go test:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(go run:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(grep:*)",
      "Bash(mv:*)",
      "Bash(rmdir:*)",
      "Bash(go mod:*)",
      "Bash(ls:*)",
      "Bash(go build:*)",
      "Bash(grep:*)",
      "Bash(tree:*)",
      "Bash(rm:*)",
      "Bash(go list:*)",
      "Bash(go mod list:*)",
      "Bash(ls:*)",
      "Bash(echo \"PATH: $PATH\")",
      "Bash(helm repo add:*)",
      "Bash(git add:*)",
      "Bash(git rebase:*)",
      "Bash(mv:*)",
      "Bash(git fetch:*)",
      "Bash(echo:*)",
      "Bash(go doc:*)",
      "Bash(git commit:*)",
      "WebFetch(domain:github.com)",
      "Bash(go get:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(./kure --help)",
      "Bash(./kure generate:*)",
      "Bash(./kure version)",
      "Bash(./kure completion bash)",
      "Bash(/dev/null)",
      "Bash(git commit:*)",
      "Bash(git reset:*)",
      "Bash(sed:*)",
      "Bash(go help:*)",
      "Bash(git restore:*)",
      "Bash(./kure --help)",
      "Bash(./kurel --help)",
      "WebFetch(domain:pkg.go.dev)",
      "Bash(go tool cover:*)",
      "Bash(go:*)",
      "Bash(touch:*)",
      "Bash(/usr/bin/go test -v ./pkg/launcher -run TestResolver/max_depth_exceeded)",
      "Bash(/usr/bin/go test -cover ./pkg/launcher)",
      "Bash(/usr/bin/go test -bench=. -benchmem -benchtime=1s ./pkg/launcher)",
      "Bash(/usr/bin/go test -bench=BenchmarkPatchApplication -benchtime=1s ./pkg/launcher)",
      "Bash(/usr/bin/go test ./pkg/launcher -run \"TestBuilder|TestExtension\")",
      "Bash(/usr/bin/go build ./cmd/kurel)",
      "Bash(./kurel validate --help)",
      "Bash(./kurel build:*)",
      "Bash(/usr/bin/go test -v ./pkg/launcher -run \"TestIntegration_\")",
      "Bash(/usr/bin/go test -v ./pkg/launcher -run \"TestIntegration_SimplePackage\")",
      "Bash(/usr/bin/go:*)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test -v ./pkg/launcher -run TestIntegration_SimplePackage)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test -v ./pkg/launcher -run TestIntegration)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test -v ./pkg/launcher -run \"TestIntegration_SimplePackage|TestIntegration_InvalidPackage|TestIntegration_WithUserValues\")",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test -v ./pkg/launcher -run TestPackageLoader)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test ./pkg/launcher -run \"TestCLI_\" -v)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test ./pkg/launcher -run \"TestCLI_BuildCommand/build_simple_package\" -v)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test ./pkg/launcher -run \"TestCLI_ValidateCommand/validate_simple_package\" -v)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test -cover ./pkg/launcher)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test ./pkg/launcher -run \"TestBuilder/build_to_stdout_YAML\" -v)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test ./pkg/launcher -run \"TestIntegration_SimplePackage\" -v)",
      "Bash(GOROOT=/usr/lib/go /usr/bin/go test ./pkg/launcher -run \"TestCLI_BuildCommand/build_with_values_file\" -v)"
    ],
    "deny": []
  }
}
