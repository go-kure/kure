# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

permissions:
  contents: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.4'

    # Install gotestfmt on the VM running the action.
    - name: Set up gotestfmt
      uses: GoTestTools/gotestfmt-action@v2
      with:
        # Optional: pass GITHUB_TOKEN to avoid rate limiting.
        token: ${{ secrets.GITHUB_TOKEN }}
        # Optional: pass the gotestfmt version you want to run.
        version: v2.2.0
        # Optional: pass an organization name and repo to use a fork
        org: GoTestTools
        repo: gotestfmt

    # Run tests with nice formatting. Save the original log in /tmp/gotest.log
    - name: Run tests
      run: |
        set -euo pipefail
        go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt

    # Upload the original go test log as an artifact for later review.
    - name: Upload test log
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-log
        path: /tmp/gotest.log
        if-no-files-found: error

    - name: Build
      run: go build -v ./...

    - name: Run example
      run: go run ./cmd/demo/main.go

